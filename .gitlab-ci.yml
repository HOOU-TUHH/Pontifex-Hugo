# This file is a template, and might need editing before it works on your project.
---
# All available Hugo versions are listed here:
# https://gitlab.com/pages/hugo/container_registry
#image: registry.gitlab.com/pages/hugo:latest
#image: bpack/hugo-npm
image: node:17-bullseye

stages:
  - testing
  - build
  - review
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive

curl-test:
  stage: testing
  image: ubuntu
  script:
    - apt update && apt install -y curl unzip
    - curl --location --output artifacts.zip --header $PRIVATE-TOKEN 'https://collaborating.tuhh.de/api/v4/projects/6786/jobs/artifacts/dev/download?job=hugo-build'
#    - curl --location --output artifacts.zip --header 'PRIVATE-TOKEN: zyG98VG64AkTdDKS3cnb' 'https://collaborating.tuhh.de/api/v4/projects/6786/jobs/artifacts/dev/download?job=hugo-build'
    - unzip artifacts.zip
  allow_failure: true

test:
  stage: testing
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - public
  only:
    variables:
      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

www3-dev-build:
  stage: build
  script:
    - sed -i -e "s;baseurl.*;baseurl = \"${REVIEW_BASE_DIR}\";" config/production/config.toml
    - sed -i -e "s;/js/basic.js;${REVIEW_BASE_DIR}js/basic.js;" layouts/shortcodes/header1.html
    - npm install
    - npm run build
  artifacts:
    paths:
      - public
  only:
    variables:
      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

dev-review:
  image: eltenedor/alpine-ssh #das ist das Image, das wir testweise verwenden können (kann ssh)
  stage: review
  script:
#
# SSH Setup
#
    - eval $(ssh-agent -s)  #variablen initialisieren
    - echo "${REVIEW_SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add -  #private key laden
    - mkdir -p ~/.ssh && touch ~/.ssh/known_hosts  # .ssh Verzeichnis anlegen und known_hosts dummy
    - echo "${REVIEW_SSH_KNOWN_HOSTS}" >> ~/.ssh/known_hosts #dummy mit Inhalt füllen 
    - chmod 700 ~/.ssh   # Berechtigungen setzen
    - scp -r -P ${REVIEW_SSH_PORT} public/* ${REVIEW_SSH_USER}@${REVIEW_HOST_NAME}:${REVIEW_WEBSERVER_ROOT}/ # möglicherweise ist rsync nicht installiert, dann scp nutzen
  cache:
    key: "$CI_COMMIT_REF_SLUG"
  environment:
    name: $CI_COMMIT_REF_NAME
    url: https://$PROXY_HOST_NAME$BASE_DIR
  only:
    variables:
      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

